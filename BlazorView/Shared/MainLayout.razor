@inherits LayoutComponentBase

@using BlazorView.Data
@using Newtonsoft.Json

@inject FetchUserFromDb UserListingService
@inject ILogger<MainLayout> logger

    <PageTitle>BlazorView</PageTitle>
    <div class="page">
        <div class="sidebar">
            <NavMenu />
        </div>

        <main>
            @Body
            <article class="content px-4">
            </article>
        </main>
        <div class="mainFooter">
            <MainFooter />
        </div>
    </div>

@code{

    //Interests
    string? interestsFromDb;
    IEnumerable<Interest> interests = new List<Interest>();
    List<string> commonInterests = new List<string>();

    //Uninterests
    string? uninterestsFromDb;
    IEnumerable<Interest> uninterests = new List<Interest>();
    List<string> commonUninterests = new List<string>();

    //Users
    IEnumerable<User> users = new List<User>();
    string usersFromDb;


    protected override async Task OnInitializedAsync()
    {
        logger.LogInformation("Initializing Logged in user, time: {time}", DateTimeOffset.Now);
        usersFromDb = await UserListingService.FetchUser();
        users = JsonConvert.DeserializeObject<IEnumerable<User>>(usersFromDb);

        if (users != null && users.Count() == 0)
        {
            User newUser = new();
            newUser.Name = "Bruker";
            UserListingService.PostUser(newUser);

            LoggedInUserService.Name = newUser.Name;
        }

        if (LoggedInUserService.Name == null)
        {
            if (users == null)
            {
                LoggedInUserService.Name = "default";
            }
            else {
                LoggedInUserService.Name = users.First().Name;
                LoggedInUserService.Id = users.First().Id;
            }

        }

        // Interests
        interestsFromDb = await UserListingService.FetchInterest();
        interests = JsonConvert.DeserializeObject<IEnumerable<Interest>>(interestsFromDb);

        @if (LoggedInUserService.Interests != null)
            {
                LoggedInUserService.Interests.Clear();
            }

        if (interests != null)
        {
            foreach (var item in interests)
            {
                if (item.UserGuid == LoggedInUserService.Id)
                {
                    commonInterests.Add(item.AdvertisementUuid);
                }
            }
            LoggedInUserService.Interests = commonInterests;
        }


        // Uninterests
        uninterestsFromDb = await UserListingService.FetchUninterest();
        uninterests = JsonConvert.DeserializeObject<IEnumerable<Interest>>(uninterestsFromDb);

        if (LoggedInUserService.Uninterests != null)
        {
            LoggedInUserService.Uninterests.Clear();
        }

        if (uninterests != null)
        {
            foreach (var item in uninterests)
            {
                if (item.UserGuid == LoggedInUserService.Id)
                {
                    commonUninterests.Add(item.AdvertisementUuid);
                }
            }
            LoggedInUserService.Uninterests = commonUninterests;
        }


    }
}

