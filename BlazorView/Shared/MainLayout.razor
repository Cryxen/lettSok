@inherits LayoutComponentBase

@using BlazorView.Data
@using Newtonsoft.Json

@inject FetchUserFromDb UserListingService
@inject ILogger<MainLayout> Logger

    <PageTitle>BlazorView</PageTitle>
    <div class="page">
        <div class="sidebar">
            <NavMenu />
        </div>

        <main>
            @Body
            <article class="content px-4">
            </article>
        </main>
        <div class="mainFooter">
            <MainFooter />
        </div>
    </div>

@code{

    //Interests
    string? InterestsFromDb;
    IEnumerable<Interest> Interests = new List<Interest>();
    List<string> CommonInterests = new List<string>();

    //Uninterests
    string? UninterestsFromDb;
    IEnumerable<Interest> Uninterests = new List<Interest>();
    List<string> CommonUninterests = new List<string>();

    //Users
    IEnumerable<User> Users = new List<User>();
    string UsersFromDb;


    protected override async Task OnInitializedAsync()
    {
        Logger.LogInformation("Initializing Logged in user, time: {time}", DateTimeOffset.Now);
        UsersFromDb = await UserListingService.FetchUser();
        Users = JsonConvert.DeserializeObject<IEnumerable<User>>(UsersFromDb);

        if (Users != null && Users.Count() == 0)
        {
            User NewUser = new();
            NewUser.Name = "Bruker";
            UserListingService.PostUser(NewUser);

            LoggedInUserService.Name = NewUser.Name;
        }

        if (LoggedInUserService.Name == null)
        {
            if (Users == null)
            {
                LoggedInUserService.Name = "default";
            }
            else {
                LoggedInUserService.Name = Users.First().Name;
                LoggedInUserService.Id = Users.First().Id;
            }

        }

        // Interests
        InterestsFromDb = await UserListingService.FetchInterest();
        Interests = JsonConvert.DeserializeObject<IEnumerable<Interest>>(InterestsFromDb);

        @if (LoggedInUserService.Interests != null)
            {
                LoggedInUserService.Interests.Clear();
            }

        if (Interests != null)
        {
            foreach (var Item in Interests)
            {
                if (Item.UserGuid == LoggedInUserService.Id)
                {
                    CommonInterests.Add(Item.AdvertisementUuid);
                }
            }
            LoggedInUserService.Interests = CommonInterests;
        }


        // Uninterests
        UninterestsFromDb = await UserListingService.FetchUninterest();
        Uninterests = JsonConvert.DeserializeObject<IEnumerable<Interest>>(UninterestsFromDb);

        if (LoggedInUserService.Uninterests != null)
        {
            LoggedInUserService.Uninterests.Clear();
        }

        if (Uninterests != null)
        {
            foreach (var Item in Uninterests)
            {
                if (Item.UserGuid == LoggedInUserService.Id)
                {
                    CommonUninterests.Add(Item.AdvertisementUuid);
                }
            }
            LoggedInUserService.Uninterests = CommonUninterests;
        }


    }
}

