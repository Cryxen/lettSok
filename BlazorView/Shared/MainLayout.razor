@inherits LayoutComponentBase

@using BlazorView.Data
@using Newtonsoft.Json

@inject FetchUserFromDb UserListingService
@inject ILogger<MainLayout> Logger

    <PageTitle>BlazorView</PageTitle>
    <div class="page">
        <div class="sidebar">
            <NavMenu />
        </div>

        <main>
            @Body
            <article class="content px-4">
            </article>
        </main>
        <div class="mainFooter">
            <MainFooter />
        </div>
    </div>

@code{

    //Interests
    private string? _interestsFromDb;
    private IEnumerable<Interest> _interests = new List<Interest>();
    private List<string> _commonInterests = new List<string>();

    //Uninterests
    private string? _uninterestsFromDb;
    private IEnumerable<Interest> _uninterests = new List<Interest>();
    private List<string> _commonUninterests = new List<string>();

    //Users
    private IEnumerable<User> _users = new List<User>();
    private string _usersFromDb;


    protected override async Task OnInitializedAsync()
    {
        Logger.LogInformation("Initializing Logged in user, time: {time}", DateTimeOffset.Now);
        _usersFromDb = await UserListingService.FetchUser();
        _users = JsonConvert.DeserializeObject<IEnumerable<User>>(_usersFromDb);

        if (_users != null && _users.Count() == 0)
        {
            User NewUser = new();
            NewUser.Name = "Bruker";
            UserListingService.PostUser(NewUser);

            LoggedInUserService.Name = NewUser.Name;
        }

        if (LoggedInUserService.Name == null)
        {
            if (_users == null)
            {
                LoggedInUserService.Name = "default";
            }
            else {
                LoggedInUserService.Name = _users.First().Name;
                LoggedInUserService.Id = _users.First().Id;
            }

        }

        // Interests
        _interestsFromDb = await UserListingService.FetchInterest();
        _interests = JsonConvert.DeserializeObject<IEnumerable<Interest>>(_interestsFromDb);

        @if (LoggedInUserService.Interests != null)
            {
                LoggedInUserService.Interests.Clear();
            }

        if (_interests != null)
        {
            foreach (var Item in _interests)
            {
                if (Item.UserGuid == LoggedInUserService.Id)
                {
                    _commonInterests.Add(Item.AdvertisementUuid);
                }
            }
            LoggedInUserService.Interests = _commonInterests;
        }


        // Uninterests
        _uninterestsFromDb = await UserListingService.FetchUninterest();
        _uninterests = JsonConvert.DeserializeObject<IEnumerable<Interest>>(_uninterestsFromDb);

        if (LoggedInUserService.Uninterests != null)
        {
            LoggedInUserService.Uninterests.Clear();
        }

        if (_uninterests != null)
        {
            foreach (var Item in _uninterests)
            {
                if (Item.UserGuid == LoggedInUserService.Id)
                {
                    _commonUninterests.Add(Item.AdvertisementUuid);
                }
            }
            LoggedInUserService.Uninterests = _commonUninterests;
        }


    }
}

