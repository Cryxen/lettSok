@using BlazorView.Pages.Components
@using BlazorView.Data
@using Newtonsoft.Json

@inject FetchUserFromDb UserListingService
@inject ILogger<Index> Logger
@page "/"

<PageTitle>Index</PageTitle>

<div class="contentWrapper">
        
            <DisplayFullListing AdvertisementToShow="@_advertisementToShow" FullListingStyle="@_fullListingStyle" ShowFullAdvertisement="@ShowFullAdvertisement"/>
        
    <h1>ANGSTFRI JOBBSØKING</h1>
    <picture>
        <img src="img/logo.png" class="logo" />
    </picture>
    <EditForm Model="@_searchModel" class="searchForm" name="searchForm">
        <input type="text" placeholder="Søk her" @bind-value="_searchValue" @bind-value:event="oninput" />
        <button @onclick="SearchPress">Søk</button>
    </EditForm>

    @if (_showSearch)
    {
        <section class="listings">
            <FetchListings SearchValue="@_searchValue.ToUpper()" AdvertisementToShow="@ShowFullListing" />
        </section>
    }
</div>


@code{


    private bool _showSearch = false;
    private Advertisement? _advertisementToShow;
    private string _fullListingStyle;

    /// <summary>
    /// Used by EditForm
    /// 
    /// </summary>
    private class SearchModel
    {
        public SearchModel()
        {
        }
    }
    private SearchModel _searchModel = new();

    // Value of search field
    private string? _searchValue = "";
    private string? _tempSearch = "";

    /// <summary>
    /// Method being used when search button is pressed.
    /// </summary>
    private void SearchPress()
    {
        _showSearch ^= true;
    }

    //Interests
    private string? _interestsFromDb;
    private IEnumerable<Interest> _interests = new List<Interest>();
    private List<string> _commonInterests = new List<string>();

    //Uninterests
    private string? _uninterestsFromDb;
    private IEnumerable<Interest> _uninterests = new List<Interest>();
    private List<string> _commonUninterests = new List<string>();

    //Users
    private IEnumerable<User> _users = new List<User>();
    private string _usersFromDb;

    private async Task ShowFullListing(Advertisement advertisement)
    {
        Logger.LogDebug("Showing the full listing, time: {time}", DateTimeOffset.Now);
        _advertisementToShow = advertisement;
        _fullListingStyle = "visibility: visible;";
        _tempSearch = _searchValue;
        _tempSearch = "";
    }

    private async Task ShowFullAdvertisement()
    {
        _fullListingStyle = "visibility: hidden;";
        _searchValue = _tempSearch;

    }

}