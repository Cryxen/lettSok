@using BlazorView.Pages.Components
@using BlazorView.Data
@using Newtonsoft.Json

@inject FetchUserFromDb UserListingService
@inject FetchJobListingsFromInternet JobListingsFromInternetService
@page "/"

<PageTitle>Index</PageTitle>
<div class="contentWrapper">
    <p>@fullListingStyle</p>
        
            <DisplayFullListing advertisementToShow="@advertisementToShow" fullListingStyle="@fullListingStyle" showFullAdvertisement="@showFullAdvertisement"/>
        
    <h1>ANGSTFRI JOBBSØKING</h1>
    <picture>
        <img src="img/LETT-5.png" class="logo" />
    </picture>
    <EditForm Model="@searchModel" class="searchForm">
        <input type="text" placeholder="Søk her" @bind-value="searchValue" @bind-value:event="oninput" />
        <button @onclick="searchPress">Søk</button>
    </EditForm>

    @if (showSearch)
    {
        <section class="listings">
            <FetchListings SearchValue="@searchValue.ToUpper()" advertisementToShow="@showFullListing" />
        </section>
    }
</div>


@code{


    int counter = 0;
    bool showSearch = false;
    Advertisement? advertisementToShow;
    string fullListingStyle;

    /// <summary>
    /// Used by EditForm
    /// </summary>
    private class SearchModel
    {
        public SearchModel()
        {
        }
    }
    private SearchModel searchModel = new();

    // Value of search field
    string? searchValue = "";
    string? tempSearch = "";

    /// <summary>
    /// Method being used when search button is pressed.
    /// </summary>
    private void searchPress()
    {
        showSearch ^= true;
    }

    //Interests
    string? interestsFromDb;
    IEnumerable<Interest> interests = new List<Interest>();
    List<string> commonInterests = new List<string>();

    //Uninterests
    string? uninterestsFromDb;
    IEnumerable<Interest> uninterests = new List<Interest>();
    List<string> commonUninterests = new List<string>();

    //Users
    IEnumerable<User> users = new List<User>();
    string usersFromDb;

    private async Task showFullListing(Advertisement advertisement)
    {
        advertisementToShow = advertisement;
        fullListingStyle = "visibility: visible;";
        tempSearch = searchValue;
        tempSearch = "";
    }

    private async Task showFullAdvertisement()
    {
        fullListingStyle = "visibility: hidden;";
        searchValue = tempSearch;

    }

}