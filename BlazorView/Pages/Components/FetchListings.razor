@using BlazorView.Data
@using BlazorView.Pages.Components
@using System
@using Newtonsoft.Json

@inject FetchJobListingsFromDb JobListingsService
@inject ILogger<FetchListings> Logger
<!--If statement checking if user searches for an ad. -->

@if (_advertisementList != null)
{
    @if (SearchValue != "")
    {
        @foreach (var Item in _advertisementList)
        {
            <!--if statement looking for search string in: Title, description, employer, engagement type and municipal-->
            @if (Item.Title != null && Item.Description != null && Item.Employer != null && Item.EngagementType != null && Item.Municipal != null)
            {
                @if (Item.Title.ToUpper().Contains(SearchValue) || Item.Description.ToUpper().Contains(SearchValue) ||
                 Item.Employer.ToUpper().Contains(SearchValue) || Item.EngagementType.ToUpper().Contains(SearchValue) ||
                 Item.Municipal.ToUpper().Contains(SearchValue))
                {
                    <DisplayListing Item="Item" ShowFullAdvertisement="@ShowFullAdvertisement" />
                }
            }

        }
    }
    else
    {
        @foreach (var Item in _advertisementList)
        {
            <DisplayListing Item="Item" AdvertisementToShow="@AdvertisementToShow" />
        }
    }
}
else
{
    <p>Det er dessverre utfordringer med å nå Databasen som holder på ledige stillinger. Vennligst prøv igjen senere.</p>

}





@code {
    private IEnumerable<Advertisement> _advertisementList = new List<Advertisement>();
    private string _advertisementsFromDb;

    [Parameter]
    public string? SearchValue { get; set; }

    [Parameter]
    public EventCallback<Advertisement> AdvertisementToShow { get; set; }

    [Parameter]
    public bool ShowFullAdvertisement { get; set; }
    /// <summary>
    /// Fetch job listings from database
    /// </summary>
    /// <returns></returns>
    protected override async Task OnInitializedAsync()
    {
        Logger.LogInformation("Fetching listings from Database, time: {time}", DateTimeOffset.Now);
        _advertisementsFromDb = await JobListingsService.FetchJobListings();
        _advertisementList = JsonConvert.DeserializeObject<IEnumerable<Advertisement>>(_advertisementsFromDb);
    }

}

