@using BlazorView.Data
@using Newtonsoft.Json

@inject FetchJobListingsFromDb JobListingsService
@inject FetchUserFromDb UserListingService

<h3>Stillinger som er markert som likt:</h3>
@foreach (var item in advertisementList)
{
    if (LoggedInUserService.interests.Contains(item.Uuid))
    {
        <p>@item.Title</p>
        <button @onclick="() => RemoveFromInterests(item)">Fjern fra likt kategori</button>
    }
}
@if (LoggedInUserService.interests == null || LoggedInUserService.interests.Count() == 0)
{
        <p>Ingen stillinger er markert som likt</p>
}

@code {
    IEnumerable<Advertisement> advertisementList = new List<Advertisement>();
    string advertisementsFromDb;



    //Interests
    string? interestsFromDb;
    IEnumerable<Interest> interests = new List<Interest>();
    List<string> commonInterests = new List<string>();

    /// <summary>
    /// Fetch job listings from database
    /// </summary>
    /// <returns></returns>
    protected override async Task OnInitializedAsync()
    {
        advertisementsFromDb = await JobListingsService.FetchJobListings();
        advertisementList = JsonConvert.DeserializeObject<IEnumerable<Advertisement>>(advertisementsFromDb);

        // Fetch uninterests TODO: Try to make this global at some point
        interestsFromDb = await UserListingService.FetchInterest();
        interests = JsonConvert.DeserializeObject<IEnumerable<Interest>>(interestsFromDb);

        foreach (var item in interests)
        {
            if (item.userGuid == LoggedInUserService.Id)
            {
                commonInterests.Add(item.advertisementUuid);
            }
        }
        LoggedInUserService.interests = commonInterests;
    }

    private void RemoveFromInterests(Advertisement advertisement)
    {
        Interest interest = new();
        interest.userGuid = LoggedInUserService.Id;
        interest.advertisementUuid = advertisement.Uuid;

        UserListingService.DeleteInterest(interest);
        LoggedInUserService.interests.Remove(advertisement.Uuid);
    }
}

