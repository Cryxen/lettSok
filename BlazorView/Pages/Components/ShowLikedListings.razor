@using BlazorView.Data
@using Newtonsoft.Json

@inject FetchJobListingsFromDb JobListingsService
@inject FetchUserFromDb UserListingService
@inject ILogger<ShowLikedListings> Logger


        @if (AdvertisementList != null)
        {
            @foreach (var Item in AdvertisementList)
            {
                if (LoggedInUserService.Interests.Contains(Item.Uuid))
                {
                    <table>
                        <tr>
                            <td>@Item.Title</td>
                            <td><button @onclick="() => RemoveFromInterests(Item)">Slett</button></td>
                        </tr>
                    </table>
                }
            }
        }
        else
        {
            <p>Det er dessverre utfordringer med å nå Databasen som holder på ledige stillinger. Vennligst prøv igjen senere.</p>
        }

        @if (LoggedInUserService.Interests == null || LoggedInUserService.Interests.Count() == 0)
        {
            <p>Ingen stillinger er markert som likt</p>
        }

    @code {
        IEnumerable<Advertisement> AdvertisementList = new List<Advertisement>();
        string AdvertisementsFromDb;



        //Interests
        string? InterestsFromDb;
        IEnumerable<Interest> Interests = new List<Interest>();
        List<string> CommonInterests = new List<string>();

        /// <summary>
        /// Fetch job listings from database
        /// </summary>
        /// <returns></returns>
        protected override async Task OnInitializedAsync()
        {
            Logger.LogInformation("Fetching Job Listings from Database, time: {time}", DateTimeOffset.Now);
            AdvertisementsFromDb = await JobListingsService.FetchJobListings();
            AdvertisementList = JsonConvert.DeserializeObject<IEnumerable<Advertisement>>(AdvertisementsFromDb);

            // Fetch uninterests TODO: Try to make this global at some point
            Logger.LogInformation("Fetching Interests from Database, time: {time}", DateTimeOffset.Now);
            InterestsFromDb = await UserListingService.FetchInterest();
            Interests = JsonConvert.DeserializeObject<IEnumerable<Interest>>(InterestsFromDb);

            if (Interests != null)
            {
                foreach (var Item in Interests)
                {
                    if (Item.UserGuid == LoggedInUserService.Id)
                    {
                        CommonInterests.Add(Item.AdvertisementUuid);
                    }
                }
                LoggedInUserService.Interests = CommonInterests;
            }

        }

        private void RemoveFromInterests(Advertisement advertisement)
        {
            Logger.LogInformation("Removing Advertisement Uuid: {0} from Interest list for user {1}, time: {time}", advertisement.Uuid, LoggedInUserService.Name, DateTimeOffset.Now);
            Interest Interest = new();
            Interest.UserGuid = LoggedInUserService.Id;
            Interest.AdvertisementUuid = advertisement.Uuid;

            UserListingService.DeleteInterest(Interest);
            LoggedInUserService.Interests.Remove(advertisement.Uuid);
        }
    }

