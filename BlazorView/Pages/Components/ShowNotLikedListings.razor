@using BlazorView.Data
@using Newtonsoft.Json
@inject FetchJobListingsFromDb JobListingsService
@inject FetchUserFromDb UserListingService


<h3>Stillinger som er markert som ikke likt:</h3>
@foreach (var item in advertisementList)
    {
        if (loggedInUser.uninterests.Contains(item.Uuid))
        {
            <p>@item.Title</p> <button @onclick="() => RemoveFromUninterests(item)">Fjern fra ikke likt kategori</button>
        }
    }
@if (loggedInUser.uninterests.Count() == 0)
    {
        <p> Ingen stillinger er markert som ikke likt.</p>
    }
    @code {

        IEnumerable<Advertisement> advertisementList = new List<Advertisement>();
        string advertisementsFromDb;

        [CascadingParameter]
        public LoggedInUserService? loggedInUser { get; set; }

        //Uninterests
        string? uninterestsFromDb;
        IEnumerable<Interest> uninterests = new List<Interest>();
        List<string> commonUninterests = new List<string>();

        /// <summary>
        /// Fetch job listings from database
        /// </summary>
        /// <returns></returns>
        protected override async Task OnInitializedAsync()
        {
            advertisementsFromDb = await JobListingsService.FetchJobListings();
            advertisementList = JsonConvert.DeserializeObject<IEnumerable<Advertisement>>(advertisementsFromDb);

            // Fetch uninterests TODO: Try to make this global at some point
            uninterestsFromDb = await UserListingService.FetchUninterest();
            uninterests = JsonConvert.DeserializeObject<IEnumerable<Interest>>(uninterestsFromDb);

            foreach (var item in uninterests)
            {
                if (item.userGuid == loggedInUser.Id)
                {
                    commonUninterests.Add(item.advertisementUuid);
                }
            }
            loggedInUser.uninterests = commonUninterests;
        }

        private void RemoveFromUninterests(Advertisement advertisement)
{
            Interest interest = new();
            interest.userGuid = loggedInUser.Id;
            interest.advertisementUuid = advertisement.Uuid;

            UserListingService.DeleteUninterest(interest);
            loggedInUser.uninterests.Remove(advertisement.Uuid);
}
    }

