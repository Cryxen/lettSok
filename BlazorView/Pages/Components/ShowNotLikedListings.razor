@using BlazorView.Data
@using Newtonsoft.Json
@inject FetchJobListingsFromDb JobListingsService
@inject FetchUserFromDb UserListingService
@inject ILogger<ShowNotLikedListings> Logger

@if (_advertisementList != null)
{
    @foreach (var Item in _advertisementList)
    {
        if (LoggedInUserService.Uninterests.Contains(Item.Uuid))
        {
                <table>
                    <tr>
                        <td>@Item.Title</td>
                        <td><button @onclick="() => RemoveFromUninterests(Item)">Slett</button></td>
                    </tr>
                </table>
        }
    }
    }
    else
    {
        <p>Det er dessverre utfordringer med å nå Databasen som holder på ledige stillinger. Vennligst prøv igjen senere.</p>
    }

@if (LoggedInUserService.Uninterests == null || LoggedInUserService.Uninterests.Count() == 0)
{
    <p> Ingen stillinger er markert som ikke likt.</p>
}
@code {

    private IEnumerable<Advertisement> _advertisementList = new List<Advertisement>();
    private string _advertisementsFromDb;



    //Uninterests.
    private string? _uninterestsFromDb;
    private IEnumerable<Interest> _uninterests = new List<Interest>();
    private List<string> _commonUninterests = new List<string>();

    /// <summary>
    /// Fetch job listings from database.
    /// </summary>
    /// <returns></returns>
    protected override async Task OnInitializedAsync()
    {
        _advertisementsFromDb = await JobListingsService.FetchJobListings();
        _advertisementList = JsonConvert.DeserializeObject<IEnumerable<Advertisement>>(_advertisementsFromDb);

        // Fetch uninterests TODO: Try to make this global at some point.
        Logger.LogInformation("Get uninterests from Database, time: {time}", DateTimeOffset.Now);
        _uninterestsFromDb = await UserListingService.FetchUninterest();
        _uninterests = JsonConvert.DeserializeObject<IEnumerable<Interest>>(_uninterestsFromDb);

        if (_uninterests != null)
        {
            foreach (var Item in _uninterests)
            {
                if (Item.UserGuid == LoggedInUserService.Id)
                {
                    _commonUninterests.Add(Item.AdvertisementUuid);
                }
            }
            LoggedInUserService.Uninterests = _commonUninterests;
        }

    }
      
    private void RemoveFromUninterests(Advertisement advertisement)
    {
        Interest Interest = new();
        Interest.UserGuid = LoggedInUserService.Id;
        Interest.AdvertisementUuid = advertisement.Uuid;
        Logger.LogInformation("Deleting uninterest from Database, Advertisement Uuid: {0}, User Id: {1}, Time: {time}", Interest.AdvertisementUuid, Interest.UserGuid, DateTimeOffset.Now);

        UserListingService.DeleteUninterest(Interest);
        LoggedInUserService.Uninterests.Remove(advertisement.Uuid);
    }
}

