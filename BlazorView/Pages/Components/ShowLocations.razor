@using BlazorView.Data
@using Newtonsoft.Json
@inject FetchLocationsFromDb LocationService

<h3>Kommuner:</h3>
<p>@showLocations</p>
        <section>
            <EditForm Model="locationModel">
                <select @bind="selectedLocation">
                    <option value="">Velg kommune</option>
                    @foreach (var item in locations)
                    {
                        @if (!prefferedLocations.Any(i => i.LocationId == item.Id))
                        {
                            <option value="@item.Id">@item.Municipality</option>
                        }
                    }
                </select>
                <button @onclick="selectLocation">Velg kommune</button>

            </EditForm>
            <p>Lokasjoner lagt til:</p>
            @foreach (var item in locations)
            {
                @if (loggedInUserPrefferedLocations.Any(i => i.LocationId == item.Id))
                {
                    <p>@item.Municipality</p> 

                }
            }
        </section>
@code {
    [Parameter]
    public EventCallback<bool> showLocations { get; set; }


    private class LocationModel
    {

    }
    LocationModel locationModel = new();
    int selectedLocation;

    // List of municipalities in Norway
    string? locationsFromDb;
    IEnumerable<Location> locations = new List<Location>();


    // List of municipalities marked as favorable
    string? preferredLocationsFromDb;
    IEnumerable<PreferredLocation> prefferedLocations = new List<PreferredLocation>();
    List<PreferredLocation> loggedInUserPrefferedLocations = new List<PreferredLocation>();

    protected override async Task OnInitializedAsync()
    {

        // Fetch list of municipalities in Norway from db
        locationsFromDb = await LocationService.FetchLocations();
        locations = JsonConvert.DeserializeObject<IEnumerable<Location>>(locationsFromDb);

        // Fetch list of preferred municipalities in Norway from db
        preferredLocationsFromDb = await LocationService.FetchPreferredLocations();
        prefferedLocations = JsonConvert.DeserializeObject<IEnumerable<PreferredLocation>>(preferredLocationsFromDb);

        foreach (var item in prefferedLocations)
        {
            if (item.UserId == LoggedInUserService.Id)
            {
                loggedInUserPrefferedLocations.Add(item);
            }
        }
    }

    private async void selectLocation()
    {

        PreferredLocation preferredLocation = new();
        preferredLocation.UserId = LoggedInUserService.Id;
        preferredLocation.LocationId = selectedLocation;

        LocationService.PostPreferredLocation(preferredLocation);
        prefferedLocations.Append(preferredLocation);

        await showLocations.InvokeAsync();


    }
}

