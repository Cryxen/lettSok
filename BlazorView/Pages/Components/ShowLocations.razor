@using BlazorView.Data
@using Newtonsoft.Json
@inject FetchLocationsFromDb LocationService

<h3>Kommuner:</h3>
@if (showPreferred)
    {
        <p>@showPreferred</p>
<EditForm Model="locationModel">
    <select @bind="selectedLocation">
        <option value="">Velg kommune</option>
        @foreach (var item in locations)
            {
            @if (!prefferedLocations.Any(i => i.LocationId == item.Id))
                {
                <option value="@item.Id">@item.Municipality</option>
                }
            }
    </select>
    <button @onclick="selectLocation">Velg kommune</button>

</EditForm>
<p>Lokasjoner lagt til:</p>
@foreach (var item in locations)
    {
    @if (prefferedLocations.Any(i => i.LocationId == item.Id))
        {
        <p>@item.Municipality</p>

        }
    }
    }
@code {
    bool showPreferred;

    [CascadingParameter]
    public LoggedInUserService? loggedInUser { get; set; }

    private class LocationModel
    {

    }
    LocationModel locationModel = new();
    int selectedLocation;

    // List of municipalities in Norway
    string? locationsFromDb;
    IEnumerable<Location> locations = new List<Location>();


    // List of municipalities marked as favorable
    string? preferredLocationsFromDb;
    IEnumerable<PreferredLocation> prefferedLocations = new List<PreferredLocation>();

    protected override async Task OnInitializedAsync()
    {
        showPreferred = true;

        // Fetch list of municipalities in Norway from db
        locationsFromDb = await LocationService.FetchLocations();
        locations = JsonConvert.DeserializeObject<IEnumerable<Location>>(locationsFromDb);

        // Fetch list of preferred municipalities in Norway from db
        preferredLocationsFromDb = await LocationService.FetchPreferredLocations();
        prefferedLocations = JsonConvert.DeserializeObject<IEnumerable<PreferredLocation>>(preferredLocationsFromDb);
    }

    private async void selectLocation()
    {
        showPreferred = false;
        await Task.Delay(10);

        PreferredLocation preferredLocation = new();
        preferredLocation.UserId = loggedInUser.Id;
        preferredLocation.LocationId = selectedLocation;

        LocationService.PostPreferredLocation(preferredLocation);

        showPreferred = true;


    }
}

