// <auto-generated />
using System;
using JobListingsDatabaseService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JobListingsDatabaseService.Data.Migrations
{
    [DbContext(typeof(LettsokDbContext))]
    partial class LettsokDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("JobListingsDatabaseService.Data.Advertisement", b =>
                {
                    b.Property<string>("Uuid")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Employer")
                        .HasColumnType("longtext");

                    b.Property<string>("EngagementType")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("JobTitle")
                        .HasColumnType("longtext");

                    b.Property<string>("Municipal")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("Uuid");

                    b.ToTable("Advertisement", (string)null);
                });

            modelBuilder.Entity("JobListingsDatabaseService.Data.InterestedAdvertisement", b =>
                {
                    b.Property<Guid>("UserGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("AdvertisementUuid")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserGuid", "AdvertisementUuid");

                    b.HasIndex("AdvertisementUuid");

                    b.ToTable("InterestedAdvertisement");
                });

            modelBuilder.Entity("JobListingsDatabaseService.Data.UninterestedAdvertisement", b =>
                {
                    b.Property<Guid>("UserGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("AdvertisementUuid")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserGuid", "AdvertisementUuid");

                    b.HasIndex("AdvertisementUuid");

                    b.ToTable("UninterestedAdvertisement");
                });

            modelBuilder.Entity("JobListingsDatabaseService.Data.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("JobListingsDatabaseService.Data.InterestedAdvertisement", b =>
                {
                    b.HasOne("JobListingsDatabaseService.Data.Advertisement", "Advertisement")
                        .WithMany("interestedAdvertisements")
                        .HasForeignKey("AdvertisementUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JobListingsDatabaseService.Data.User", "User")
                        .WithMany("interestedAdvertisements")
                        .HasForeignKey("UserGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Advertisement");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JobListingsDatabaseService.Data.UninterestedAdvertisement", b =>
                {
                    b.HasOne("JobListingsDatabaseService.Data.Advertisement", "Advertisement")
                        .WithMany("uninterestedAdvertisements")
                        .HasForeignKey("AdvertisementUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JobListingsDatabaseService.Data.User", "User")
                        .WithMany("uninterestedAdvertisements")
                        .HasForeignKey("UserGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Advertisement");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JobListingsDatabaseService.Data.Advertisement", b =>
                {
                    b.Navigation("interestedAdvertisements");

                    b.Navigation("uninterestedAdvertisements");
                });

            modelBuilder.Entity("JobListingsDatabaseService.Data.User", b =>
                {
                    b.Navigation("interestedAdvertisements");

                    b.Navigation("uninterestedAdvertisements");
                });
#pragma warning restore 612, 618
        }
    }
}
